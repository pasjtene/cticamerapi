<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Request;

/**
 * RequestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RequestRepository extends \Doctrine\ORM\EntityRepository
{
    public function  getCommunFriend($data)
    {

        //user connected friends
        $data['id'] = $data['applicant_id'];
        $list1 =  $this->getFriends($data);

        // user selected friends
        $data['id'] = $data['receiver_id'];
        $list2 =  $this->getFriends($data);

        $list =null;
        $user1 = null;
        $user2 = null;
        foreach($list1 as $objet1)
        {
           $user1 =($objet1->getApplicant()->getId()== $data['applicant_id'])? $objet1->getReceiver() : $objet1->getApplicant();
            foreach($list2 as $objet2)
            {
                $user2 =($objet2->getApplicant()->getId()== $data['receiver_id'])? $objet2->getReceiver() : $objet2->getApplicant();
                if($user1->getId()==$user2->getId())
                {
                    $list[] = $objet2;
                }
            }
        }

        return $list;

    }

    public function getFriends($data)
    {
        $parameters['id']=$data['id'];
        $query = $this->createQueryBuilder('a');
        $query->select(['a','app','rec'])
            ->leftJoin('a.applicant','app')
            ->leftJoin('a.receiver','rec');
        $query->where('(app.id =:id or rec.id =:id)');
        $query->andWhere('a.state =true');
        $query->setParameters($parameters);
        $query->addOrderBy('a.createDate','desc');
        return $query->getQuery()->getResult();
    }

    public function getRequests($data)
    {
        $parameters['id']=$data['id'];
        $query = $this->createQueryBuilder('a');
        $query->select(['a','app','rec'])
            ->leftJoin('a.applicant','app')
            ->leftJoin('a.receiver','rec');
        $query->where('(app.id =:id or rec.id =:id)');
        $query->setParameters($parameters);
        $query->addOrderBy('a.createDate','desc');
        return $query->getQuery()->getResult();
    }
    public function  getAloneFriend($data, $limit=10000, $page=1, $count=false )
    {
        //user connected friends
        $data['id'] = $data['applicant_id'];
        $list1 =  $this->getRequests($data);

        // user selected friends
        $data['id'] = $data['receiver_id'];
        $list2 =  $this->getRequests($data);

        $list =null;
        $user1 = null;
        $user2 = null;
        foreach($list1 as $objet1)
        {
            $state = false;
            $user1 =($objet1->getApplicant()->getId()== $data['applicant_id'])? $objet1->getReceiver() : $objet1->getApplicant();
            foreach($list2 as $objet2)
            {
                $user2 =($objet2->getApplicant()->getId()== $data['receiver_id'])? $objet2->getReceiver() : $objet2->getApplicant();
                if($user1->getId()==$user2->getId())
                {
                   $state =true;
                }
            }
            if(!$state && $objet1->getState())
            {
                $list[] = $objet1;
            }
        }

        return $list;

    }

}
